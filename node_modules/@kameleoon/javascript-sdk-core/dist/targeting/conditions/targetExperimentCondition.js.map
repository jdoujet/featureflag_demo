{"version":3,"file":"targetExperimentCondition.js","names":["TargetExperimentCondition","a","b","variation","experiment","variationMatchType","_classCallCheck","_defineProperty","experimentId","variationId","matchType","_createClass","key","value","evaluate","variationData","Ok","MatchTypeVariation","EXACT","result","checkCondition","ANY","exports"],"sources":["../../../src/targeting/conditions/targetExperimentCondition.ts"],"sourcesContent":["import { Ok, Result } from 'ts-res';\nimport { KameleoonError } from 'src/kameleoonError';\nimport { ExperimentVariationsType } from 'src/storage';\nimport { EvaluationDataType, MatchTypeVariation } from 'src/targeting/types';\nimport { ConditionDataType, ICondition } from './types';\n\nexport class TargetExperimentCondition implements ICondition {\n  private experimentId?: number | null;\n  private variationId?: number | null;\n  private matchType?: MatchTypeVariation | null;\n\n  constructor({\n    variation,\n    experiment,\n    variationMatchType,\n  }: ConditionDataType) {\n    this.experimentId = experiment;\n    this.variationId = variation;\n    this.matchType = variationMatchType;\n  }\n\n  public evaluate({\n    variationData,\n  }: EvaluationDataType): Result<boolean, KameleoonError> {\n    if (!this.experimentId) {\n      return Ok(false);\n    }\n\n    if (this.matchType === MatchTypeVariation.EXACT && !this.variationId) {\n      Ok(false);\n    }\n\n    const result = this.checkCondition({\n      variationId: this.variationId,\n      experimentId: this.experimentId,\n      variationData,\n    });\n\n    return Ok(result);\n  }\n\n  private checkCondition({\n    variationId,\n    experimentId,\n    variationData,\n  }: {\n    variationId?: number | null;\n    experimentId: number;\n    variationData: ExperimentVariationsType;\n  }): boolean {\n    const experimentIdString = String(experimentId);\n    const variation = variationData[experimentIdString];\n\n    switch (this.matchType) {\n      case MatchTypeVariation.EXACT: {\n        return variation?.variationId === variationId;\n      }\n      case MatchTypeVariation.ANY:\n        return Boolean(variation);\n      default:\n        return false;\n    }\n  }\n}\n"],"mappings":"i5CAMa,CAAAA,yBAAyB,yBAKpC,SAAAC,EAAAC,CAAA,CAIsB,IAHpB,CAAAC,CAAS,CAAAD,CAAA,CAATC,SAAS,CACTC,CAAU,CAAAF,CAAA,CAAVE,UAAU,CACVC,CAAkB,CAAAH,CAAA,CAAlBG,kBAAkB,CAAAC,eAAA,MAAAL,CAAA,EAAAM,eAAA,6BAAAA,eAAA,4BAAAA,eAAA,0BAElB,IAAI,CAACC,YAAY,CAAGJ,CAAU,CAC9B,IAAI,CAACK,WAAW,CAAGN,CAAS,CAC5B,IAAI,CAACO,SAAS,CAAGL,CACnB,CAAC,OAAAM,YAAA,CAAAV,CAAA,GAAAW,GAAA,YAAAC,KAAA,CAED,SAAAC,SAAAb,CAAA,CAEwD,IADtD,CAAAc,CAAa,CAAAd,CAAA,CAAbc,aAAa,CAEb,GAAI,CAAC,IAAI,CAACP,YAAY,CACpB,MAAO,GAAAQ,SAAE,KAAO,CAGd,IAAI,CAACN,SAAS,GAAKO,yBAAkB,CAACC,KAAK,EAAK,IAAI,CAACT,WAAW,EAClE,GAAAO,SAAE,KAAO,CAGX,GAAM,CAAAG,CAAM,CAAG,IAAI,CAACC,cAAc,CAAC,CACjCX,WAAW,CAAE,IAAI,CAACA,WAAW,CAC7BD,YAAY,CAAE,IAAI,CAACA,YAAY,CAC/BO,aAAa,CAAbA,CACF,CAAC,CAAC,CAEF,MAAO,GAAAC,SAAE,EAACG,CAAM,CAClB,CAAC,GAAAP,GAAA,kBAAAC,KAAA,CAED,SAAAO,eAAAnB,CAAA,CAQY,IAPV,CAAAQ,CAAW,CAAAR,CAAA,CAAXQ,WAAW,CACXD,CAAY,CAAAP,CAAA,CAAZO,YAAY,CACZO,CAAa,CAAAd,CAAA,CAAbc,aAAa,CAOPZ,CAAS,CAAGY,CAAa,CADGP,CAAY,IACK,CAEnD,OAAQ,IAAI,CAACE,SAAS,EACpB,IAAK,CAAAO,yBAAkB,CAACC,KAAK,CAC3B,MAAO,QAAAf,CAAS,WAATA,CAAS,QAATA,CAAS,CAAEM,WAAW,IAAKA,CAAW,CAE/C,IAAK,CAAAQ,yBAAkB,CAACI,GAAG,CACzB,QAAelB,CAAS,CAC1B,QACE,SAAa,CAEnB,CAAC,IAAAF,CAAA,IAAAqB,OAAA,CAAAtB,yBAAA,CAAAA,yBAAA"}