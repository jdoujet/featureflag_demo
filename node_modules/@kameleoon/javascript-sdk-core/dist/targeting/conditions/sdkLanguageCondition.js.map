{"version":3,"file":"sdkLanguageCondition.js","names":["SdkLanguageCondition","a","b","sdkLanguage","version","versionMatchType","_classCallCheck","_defineProperty","conditionValue","_createClass","key","value","evaluate","sdkInfo","result","checkCondition","error","Err","Ok","sdkType","type","compareSemVer","compareVersion","operator","e","validateVersion","f","_slicedToArray","major","minor","patch","j","k","compareMajor","compareMinor","comparePatch","isMajorEqual","isMinorEqual","VersionMatchType","EQUAL","GREATER","LOWER","exhaustCheck","versionSplit","split","some","isBadVersion","item","isNaN","parseInt","length","KameleoonError","KameleoonException","SemanticVersionParse","map","exports"],"sources":["../../../src/targeting/conditions/sdkLanguageCondition.ts"],"sourcesContent":["import { Err, Ok, Result } from 'ts-res';\nimport { SdkLanguageType } from 'src/constants';\nimport {\n  exhaustCheck,\n  KameleoonError,\n  KameleoonException,\n} from 'src/kameleoonError';\nimport { ExternalPackageInfoType } from 'src/types';\nimport { EvaluationDataType, VersionMatchType } from 'src/targeting/types';\nimport { ConditionDataType, ICondition } from './types';\n\nexport class SdkLanguageCondition implements ICondition {\n  private sdkLanguage?: SdkLanguageType | null;\n  private conditionValue?: string | null;\n  private versionMatchType?: VersionMatchType | null;\n  private error?: KameleoonError;\n\n  constructor({ sdkLanguage, version, versionMatchType }: ConditionDataType) {\n    this.sdkLanguage = sdkLanguage;\n    this.conditionValue = version;\n    this.versionMatchType = versionMatchType;\n  }\n\n  public evaluate({\n    sdkInfo,\n  }: EvaluationDataType): Result<boolean, KameleoonError> {\n    const result = this.checkCondition(sdkInfo);\n\n    if (this.error) {\n      return Err(this.error);\n    }\n\n    return Ok(result);\n  }\n\n  private checkCondition(sdkInfo: ExternalPackageInfoType): boolean {\n    const { type: sdkType, version } = sdkInfo;\n\n    if (!this.sdkLanguage) {\n      return false;\n    }\n\n    if (typeof this.conditionValue !== 'string') {\n      return sdkType === this.sdkLanguage;\n    }\n\n    if (!this.versionMatchType) {\n      return false;\n    }\n\n    return (\n      sdkType === this.sdkLanguage &&\n      this.compareSemVer({\n        version,\n        compareVersion: this.conditionValue,\n        operator: this.versionMatchType,\n      })\n    );\n  }\n\n  private compareSemVer({\n    version,\n    compareVersion,\n    operator,\n  }: {\n    version: string;\n    compareVersion: string;\n    operator: VersionMatchType;\n  }): boolean {\n    const [major, minor, patch] = this.validateVersion(version);\n    const [compareMajor, compareMinor, comparePatch] =\n      this.validateVersion(compareVersion);\n\n    const [isMajorEqual, isMinorEqual, isPatchEqual] = [\n      major === compareMajor,\n      minor === compareMinor,\n      patch === comparePatch,\n    ];\n\n    switch (operator) {\n      case VersionMatchType.EQUAL:\n        return isMajorEqual && isMinorEqual && isPatchEqual;\n      case VersionMatchType.GREATER:\n        return (\n          major > compareMajor ||\n          (isMajorEqual && minor > compareMinor) ||\n          (isMajorEqual && isMinorEqual && patch > comparePatch)\n        );\n      case VersionMatchType.LOWER:\n        return (\n          major < compareMajor ||\n          (isMajorEqual && minor < compareMinor) ||\n          (isMajorEqual && isMinorEqual && patch < comparePatch)\n        );\n      default:\n        exhaustCheck(operator);\n    }\n  }\n\n  private validateVersion(version: string): [number, number, number] {\n    const versionSplit = version.split('.');\n    const isBadVersion = (item: string) =>\n      isNaN(parseInt(item)) || item.length === 0;\n\n    if (versionSplit.some(isBadVersion) || versionSplit.length !== 3) {\n      this.error = new KameleoonError(\n        KameleoonException.SemanticVersionParse,\n        version,\n      );\n\n      return [0, 0, 0];\n    }\n\n    return versionSplit.map((item) => parseInt(item)) as [\n      number,\n      number,\n      number,\n    ];\n  }\n}\n"],"mappings":"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"}