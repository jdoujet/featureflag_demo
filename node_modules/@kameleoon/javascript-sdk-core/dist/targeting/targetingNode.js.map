{"version":3,"file":"targetingNode.js","names":["TargetingNode","a","value","left","right","_classCallCheck","_defineProperty","isOperator","nodeValue","e","result","ConditionFactory","createCondition","inverseResult","isInclude","ok","data","nodeError","error","leftChild","rightChild","_createClass","key","get","Operator","And","Or","exports"],"sources":["../../src/targeting/targetingNode.ts"],"sourcesContent":["import { KameleoonError } from 'src/kameleoonError';\nimport { ConditionFactory, ConditionDataType } from './conditions';\nimport { NodeValueType, Operator } from './types';\n\nexport interface ITargetingNode {\n  readonly value?: NodeValueType;\n  readonly left?: ITargetingNode;\n  readonly right?: ITargetingNode;\n  readonly error?: KameleoonError;\n}\n\nexport class TargetingNode implements ITargetingNode {\n  private nodeValue?: NodeValueType;\n  private nodeError?: KameleoonError;\n  private leftChild?: ITargetingNode;\n  private rightChild?: ITargetingNode;\n  private inverseResult: boolean = false;\n\n  constructor(\n    value: ConditionDataType | Operator,\n    left?: ITargetingNode,\n    right?: ITargetingNode,\n  ) {\n    if (this.isOperator(value)) {\n      this.nodeValue = value;\n    } else {\n      const result = ConditionFactory.createCondition(value);\n      this.inverseResult = !(value.isInclude ?? true);\n\n      if (result.ok) {\n        this.nodeValue = result.data;\n      } else {\n        this.nodeError = result.error;\n      }\n    }\n\n    this.leftChild = left;\n    this.rightChild = right;\n  }\n\n  get value(): NodeValueType | undefined {\n    return this.nodeValue;\n  }\n\n  get error(): KameleoonError | undefined {\n    return this.nodeError;\n  }\n\n  get left(): ITargetingNode | undefined {\n    return this.leftChild;\n  }\n\n  get right(): ITargetingNode | undefined {\n    return this.rightChild;\n  }\n\n  get inverse(): boolean {\n    return this.inverseResult;\n  }\n\n  private isOperator(value: ConditionDataType | Operator): value is Operator {\n    return value === Operator.And || value === Operator.Or;\n  }\n}\n"],"mappings":"+4CAWa,CAAAA,aAAa,yBAOxB,SAAAC,EACEC,CAAmC,CACnCC,CAAqB,CACrBC,CAAsB,CACtB,CACA,GAAAC,eAAA,MAAAJ,CAAA,EAAAK,eAAA,0BAAAA,eAAA,0BAAAA,eAAA,0BAAAA,eAAA,2BAAAA,eAAA,0BAAI,IAAI,CAACC,UAAU,CAACL,CAAK,CAAC,CACxB,IAAI,CAACM,SAAS,CAAGN,CAAK,KACjB,KAAAO,CAAA,CACCC,CAAM,CAAGC,4BAAgB,CAACC,eAAe,CAACV,CAAK,CAAC,CACtD,IAAI,CAACW,aAAa,SAAAJ,CAAA,CAAKP,CAAK,CAACY,SAAS,YAAAL,CAAA,GAAAA,CAAS,CAE3CC,CAAM,CAACK,EAAE,CACX,IAAI,CAACP,SAAS,CAAGE,CAAM,CAACM,IAAI,CAE5B,IAAI,CAACC,SAAS,CAAGP,CAAM,CAACQ,KAE5B,CAEA,IAAI,CAACC,SAAS,CAAGhB,CAAI,CACrB,IAAI,CAACiB,UAAU,CAAGhB,CACpB,CAAC,OAAAiB,YAAA,CAAApB,CAAA,GAAAqB,GAAA,SAAAC,GAAA,CAED,SAAAA,IAAA,CAAuC,CACrC,MAAO,KAAI,CAACf,SACd,CAAC,GAAAc,GAAA,SAAAC,GAAA,CAED,SAAAA,IAAA,CAAwC,CACtC,MAAO,KAAI,CAACN,SACd,CAAC,GAAAK,GAAA,QAAAC,GAAA,CAED,SAAAA,IAAA,CAAuC,CACrC,MAAO,KAAI,CAACJ,SACd,CAAC,GAAAG,GAAA,SAAAC,GAAA,CAED,SAAAA,IAAA,CAAwC,CACtC,MAAO,KAAI,CAACH,UACd,CAAC,GAAAE,GAAA,WAAAC,GAAA,CAED,SAAAA,IAAA,CAAuB,CACrB,MAAO,KAAI,CAACV,aACd,CAAC,GAAAS,GAAA,cAAApB,KAAA,CAED,SAAAK,WAAmBL,CAAmC,CAAqB,CACzE,MAAO,CAAAA,CAAK,GAAKsB,eAAQ,CAACC,GAAG,EAAIvB,CAAK,GAAKsB,eAAQ,CAACE,EACtD,CAAC,IAAAzB,CAAA,IAAA0B,OAAA,CAAA3B,aAAA,CAAAA,aAAA"}