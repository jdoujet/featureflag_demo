{"version":3,"file":"types.js","names":[],"sources":["../../src/utilities/types.ts"],"sourcesContent":["import { CacheManager } from 'src/cacheManager';\nimport { CampaignConfiguration } from 'src/campaignConfiguration';\nimport { KameleoonVisitorDataType } from 'src/kameleoonData/types';\nimport { Requester } from 'src/requester';\nimport {\n  TrackDataParamsType,\n  TrackExperimentParamsType,\n} from 'src/requester/types';\nimport { IStorage, OfflineTracking } from 'src/storage/types';\nimport { SegmentType } from 'src/targeting';\nimport { ExternalPackageInfoType, TrackingCacheItemType } from 'src/types';\nimport {\n  VariationConfiguration,\n  FeatureFlagVariationType,\n} from 'src/variationConfiguration';\n\nexport type CheckTargetingParametersType = {\n  segment: SegmentType | null;\n  experimentId: number | null;\n  visitorCode: string;\n  packageInfo: ExternalPackageInfoType;\n  targetingData: KameleoonVisitorDataType;\n  campaignConfiguration: CampaignConfiguration;\n  variationConfiguration?: VariationConfiguration;\n};\n\nexport type TrackRuleParametersType = {\n  featureFlagVariation: FeatureFlagVariationType;\n  campaignConfiguration: CampaignConfiguration;\n  visitorCode: string;\n  requester: Requester;\n  userAgent?: string;\n  isOfflineModeOn?: boolean;\n  offlineTrackingStorage: IStorage<OfflineTracking>;\n};\n\nexport type ManageCacheParametersType = {\n  cacheManager: CacheManager<TrackingCacheItemType>;\n  visitorCode: string;\n  experimentId: number;\n  variationId: number;\n};\n\nexport type TrackDataParametersType = {\n  visitorCode: string;\n  campaignConfiguration: CampaignConfiguration;\n  requester: Requester;\n  isOfflineModeOn?: boolean;\n  offlineTrackingStorage: IStorage<OfflineTracking>;\n};\n\nexport type TrackExperimentParametersType = {\n  campaignConfiguration: CampaignConfiguration;\n  visitorCode: string;\n  requester: Requester;\n  variationId: number;\n  experimentId: number;\n  isUnallocated: boolean;\n  isOfflineModeOn?: boolean;\n  offlineTrackingStorage: IStorage<OfflineTracking>;\n};\n\nexport type AddToOfflineTrackingParametersType = {\n  item: TrackExperimentParamsType | TrackDataParamsType;\n  isExperiment: boolean;\n  storage: IStorage<OfflineTracking>;\n  onSuccess?: () => void;\n};\n\nexport type SendOfflineTrackingParametersType = {\n  storage: IStorage<OfflineTracking>;\n  requester: Requester;\n};\n\nexport type DeleteFromOfflineTrackingParametersType = {\n  timestamps: number[];\n  storage: IStorage<OfflineTracking>;\n};\n"],"mappings":""}