{"version":3,"file":"variationConfiguration.js","names":["VariationConfiguration","a","experiments","externalStorage","d","_classCallCheck","_defineProperty","visitorCode","experimentId","experiment","find","id","assignVariation","Err","KameleoonError","KameleoonException","ExperimentConfigurationNotFound","storage","_createClass","key","value","getAssignedVariations","result","read","ok","data","Ok","StorageRead","getFeatureFlagVariation","featureFlag","targetingData","packageInfo","campaignConfiguration","g","withAssignment","validateResult","Utilities","validateVisitorCode","error","i","rules","featureKey","featureFlagId","defaultVariationKey","n","_createForOfIteratorHelper","s","done","rule","segment","exposition","respoolTime","variationByExposition","targetingResult","checkTargeting","variationConfiguration","ruleHash","Hasher","obtainFeatureFlagHashDouble","campaignId","x","totalDeviation","variationHash","A","variation","type","RuleType","EXPERIMENTATION","updateStorageData","variationId","restParameters","_objectWithoutProperties","_excluded","_objectSpread","e","f","TARGETED_DELIVERY","variationKey","getExperimentVariation","c","deviations","hashDouble","obtainExperimentHashDouble","isUnallocated","resultVariationId","k","deviation","NotAllocated","variationResult","StorageParse","updatedVariationData","updatedVariation","assignmentDate","Date","toString","write","exports"],"sources":["../../src/variationConfiguration/variationConfiguration.ts"],"sourcesContent":["import { Err, Ok, Result } from 'ts-res';\nimport { ExperimentItemType } from 'src/campaignConfiguration';\nimport { Hasher } from 'src/hasher';\nimport { KameleoonError, KameleoonException } from 'src/kameleoonError';\nimport {\n  IStorage,\n  VariationDataType,\n  ExperimentVariationsType,\n} from 'src/storage';\nimport { Utilities } from 'src/utilities';\nimport { RuleType } from 'src/campaignConfiguration/types';\nimport {\n  FeatureFlagVariationType,\n  GetFeatureFlagVariationParametersType,\n  UpdateStorageParamsType,\n} from './types';\n\ninterface IVariationConfiguration {\n  /**\n   * @method getAssociatedVariationId - gets the id of a variation assigned to a visitor with `visitorCode` from the storage. If the visitor doesn't have associated variation yet, assigns a new one, stores it and returns it's id.\n   */\n  getAssociatedVariationId: (\n    visitorCode: string,\n    experimentId: number,\n  ) => Result<number, KameleoonError>;\n  /**\n   * @method getAssignedVariations - obtains experiments with according variations that are *already assigned* and *stored* in the `variationStorage`. If `getAssociatedVariationId` had not been called before, there will be no variations to get.\n   */\n  getAssignedVariations(\n    visitorCode: string,\n  ): Result<ExperimentVariationsType, KameleoonError>;\n  /**\n   * @method getFeatureFlagVariation - obtains variation for the rule of the feature flag which is both targeted and has a variation, if no such rule was found, returns empty rule with default `variationKey`, given an option `withAssignment` of `true` will also assign a new variation and save it in the storage\n   */\n  getFeatureFlagVariation: (\n    params: GetFeatureFlagVariationParametersType,\n  ) => Result<FeatureFlagVariationType, KameleoonError>;\n  /**\n   * @method getExperimentVariation - obtains variation for the experiment by calculating the variation for the visitor *without assigning* it to a visitor\n   */\n  getExperimentVariation: (\n    visitorCode: string,\n    experiment: ExperimentItemType,\n  ) => Result<number, KameleoonError>;\n}\n\nexport class VariationConfiguration implements IVariationConfiguration {\n  private experiments: ExperimentItemType[];\n  private storage: IStorage<VariationDataType>;\n\n  constructor(\n    experiments: ExperimentItemType[],\n    externalStorage: IStorage<VariationDataType>,\n  ) {\n    this.experiments = experiments;\n    this.storage = externalStorage;\n  }\n\n  public getAssociatedVariationId = (\n    visitorCode: string,\n    experimentId: number,\n  ): Result<number, KameleoonError> => {\n    // TODO:\n    // --- Variation from storage is not checked anymore\n    // --- If nothing changes the commented code should be deleted\n    // along with the `Variation` class and according tests/types\n    // --- Mind `todo` in `getAssociatedVariationId.spec.ts`\n    //\n    // let associatedVariation: VariationType | undefined;\n\n    // this.storage.read().and((data) => {\n    //   associatedVariation = data?.[visitorCode]?.[experimentId];\n    // });\n\n    const experiment = this.experiments.find(\n      (experiment) => experiment.id === String(experimentId),\n    );\n\n    if (!experiment) {\n      return Err(\n        new KameleoonError(\n          KameleoonException.ExperimentConfigurationNotFound,\n          experimentId,\n          visitorCode,\n        ),\n      );\n    }\n\n    // const variation = new Variation(associatedVariation);\n\n    // if (variation.isValid(experiment?.respoolTime)) {\n    //   return Ok(variation.id);\n    // }\n\n    return this.assignVariation(visitorCode, experiment);\n  };\n\n  public getAssignedVariations(\n    visitorCode: string,\n  ): Result<ExperimentVariationsType, KameleoonError> {\n    const result = this.storage.read();\n\n    if (!result.ok) {\n      return result;\n    }\n\n    const experiments = result.data[visitorCode];\n\n    if (!experiments) {\n      return Err(\n        new KameleoonError(KameleoonException.StorageRead, visitorCode),\n      );\n    }\n\n    return Ok(experiments);\n  }\n\n  public getFeatureFlagVariation({\n    visitorCode,\n    featureFlag,\n    targetingData,\n    packageInfo,\n    campaignConfiguration,\n    withAssignment = false,\n  }: GetFeatureFlagVariationParametersType): Result<\n    FeatureFlagVariationType,\n    KameleoonError\n  > {\n    const validateResult = Utilities.validateVisitorCode(visitorCode);\n\n    if (!validateResult.ok) {\n      return Err(validateResult.error);\n    }\n\n    const {\n      rules,\n      featureKey,\n      id: featureFlagId,\n      defaultVariationKey,\n    } = featureFlag;\n\n    for (const rule of rules) {\n      const {\n        segment,\n        experimentId,\n        id,\n        exposition,\n        respoolTime,\n        variationByExposition,\n      } = rule;\n\n      // --- Check targeting ---\n      const targetingResult = Utilities.checkTargeting({\n        segment,\n        visitorCode,\n        experimentId,\n        targetingData,\n        packageInfo,\n        campaignConfiguration,\n        variationConfiguration: this,\n      });\n\n      if (!targetingResult.ok) {\n        return targetingResult;\n      }\n\n      if (!targetingResult.data) {\n        continue;\n      }\n\n      // --- Note ---\n      // Calculate new variation (and assign it if `withAssignment` is `true`)\n      // First the the exposed rule is calculated and then the variation inside of it\n      const ruleHash = Hasher.obtainFeatureFlagHashDouble({\n        visitorCode,\n        respoolTime,\n        campaignId: String(id),\n      });\n\n      if (ruleHash <= exposition) {\n        let totalDeviation = 0;\n\n        const variationHash = Hasher.obtainFeatureFlagHashDouble({\n          visitorCode,\n          respoolTime,\n          campaignId: String(experimentId),\n        });\n\n        for (const variation of variationByExposition) {\n          totalDeviation += variation.exposition;\n\n          if (variationHash <= totalDeviation) {\n            // --- Note ---\n            // For the `RuleType.EXPERIMENTATION` variation assignment must happen without\n            // calculating experiment deviation\n            if (rule.type === RuleType.EXPERIMENTATION && withAssignment) {\n              this.updateStorageData({\n                visitorCode,\n                experimentId: String(experimentId),\n                // --- Note ---\n                // For `RuleType.EXPERIMENTATION` `variationId` can not be null\n                variationId: variation.variationId as number,\n              });\n            }\n\n            const { exposition, ...restParameters } = variation;\n\n            return Ok({\n              ...restParameters,\n              rule,\n              featureFlagId,\n              featureKey,\n              experimentId,\n            });\n          }\n        }\n      }\n\n      if (rule.type === RuleType.TARGETED_DELIVERY) {\n        break;\n      }\n    }\n\n    return Ok({\n      featureKey,\n      featureFlagId,\n      experimentId: null,\n      variationKey: defaultVariationKey,\n      variationId: null,\n      rule: null,\n    });\n  }\n\n  public getExperimentVariation(\n    visitorCode: string,\n    experiment: ExperimentItemType,\n  ): Result<number, KameleoonError> {\n    const { id, respoolTime, deviations } = experiment;\n\n    const hashDouble = Hasher.obtainExperimentHashDouble({\n      visitorCode,\n      campaignId: id,\n      respoolTime,\n    });\n\n    let isUnallocated = true;\n    let totalDeviation = 0;\n    let resultVariationId = 0;\n\n    for (const deviation of deviations) {\n      totalDeviation += deviation.value;\n\n      if (totalDeviation >= hashDouble) {\n        // --- Note ---\n        // If sum of all variations is less than 1 (100%), then there is a chance\n        // user will end up outside of any variation\n        isUnallocated = false;\n        // --- Note ---\n        // 'origin' is the default `variationId`, it must return id of 0\n        if (deviation.variationId !== 'origin') {\n          resultVariationId = Number(deviation.variationId);\n        }\n\n        break;\n      }\n    }\n\n    if (isUnallocated) {\n      return Err(\n        new KameleoonError(KameleoonException.NotAllocated, visitorCode),\n      );\n    }\n\n    return Ok(resultVariationId);\n  }\n\n  private assignVariation(\n    visitorCode: string,\n    experiment: ExperimentItemType,\n  ): Result<number, KameleoonError> {\n    const variationResult = this.getExperimentVariation(\n      visitorCode,\n      experiment,\n    );\n\n    if (!variationResult.ok) {\n      return variationResult;\n    }\n\n    const result = this.updateStorageData({\n      visitorCode,\n      experimentId: experiment.id,\n      variationId: variationResult.data,\n    });\n\n    if (!result.ok) {\n      return result;\n    }\n\n    return Ok(variationResult.data);\n  }\n\n  private updateStorageData({\n    visitorCode,\n    experimentId,\n    variationId,\n  }: UpdateStorageParamsType): Result<void, KameleoonError> {\n    const result = this.storage.read();\n\n    if (!result.ok) {\n      // --- Note ---\n      // If there is a parsing error we return error\n      // But if there is `LocalStorageRead` error it means that\n      // data was read successfully and it's empty, which is not problem\n      // cause that might be initial `read`\n      if (result.error.type === KameleoonException.StorageParse) {\n        return result;\n      }\n    }\n\n    const updatedVariationData: VariationDataType = result.ok\n      ? result.data\n      : {};\n\n    const updatedVariation = {\n      variationId,\n      assignmentDate: new Date().toString(),\n    };\n\n    if (updatedVariationData[visitorCode]) {\n      updatedVariationData[visitorCode][experimentId] = updatedVariation;\n    } else {\n      updatedVariationData[visitorCode] = {\n        [experimentId]: updatedVariation,\n      };\n    }\n\n    return this.storage.write(updatedVariationData);\n  }\n\n  // --- TODO: commented out in case of future logic rework ---\n  // --- Mind: `variationId` could cause the `undefined` issue ---\n  // --- Reference: https://development.kameleoon.net/sdk/javascript-sdk-packages/-/merge_requests/89 ---\n  // private getAssignedRuleVariation(\n  //   visitorCode: string,\n  //   rule: RuleItemType,\n  // ): Result<GetAssignedRuleVariationResultType, KameleoonError> {\n  //   const emptyVariation: Omit<VariationByExpositionType, 'exposition'> = {\n  //     variationId: null,\n  //     variationKey: '',\n  //   };\n  //   const { experimentId, variationByExposition } = rule;\n\n  //   const variationsResult = this.getAssignedVariations(visitorCode);\n\n  //   // --- Note ---\n  //   // If there is an error, we just want to skip seeking\n  //   // for variation in the storage, not throw an error\n  //   if (!variationsResult.ok) {\n  //     return Ok(emptyVariation);\n  //   }\n\n  //   const variations = variationsResult.data;\n\n  //   if (\n  //     experimentId &&\n  //     typeof variations[experimentId].variationId !== undefined\n  //   ) {\n  //     const id = variations[experimentId].variationId;\n  //     const featureFlagVariation = variationByExposition.find(\n  //       (item) => item.variationId == id,\n  //     );\n\n  //     if (!featureFlagVariation) {\n  //       // --- Note ---\n  //       // This error is not described for public methods as\n  //       // it serves internal purpose of checking whether\n  //       // the persistent variation has been updated and should be re-allocated\n  //       return Err(new KameleoonError(KameleoonException.DataInconsistency));\n  //     }\n\n  //     const { exposition, ...restParameters } = featureFlagVariation;\n\n  //     return Ok({ ...restParameters });\n  //   }\n\n  //   return Ok(emptyVariation);\n  // }\n}\n"],"mappings":"iuHA8Ca,CAAAA,sBAAsB,yBAIjC,SAAAC,EACEC,CAAiC,CACjCC,CAA4C,CAC5C,KAAAC,CAAA,MAAAC,eAAA,MAAAJ,CAAA,EAAAK,eAAA,4BAAAA,eAAA,wBAAAA,eAAA,iCAKgC,SAChCC,CAAmB,CACnBC,CAAoB,CACe,CACnC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,GAAM,CAAAC,CAAU,CAAGL,CAAI,CAACF,WAAW,CAACQ,IAAI,CACtC,SAACD,CAAU,QAAK,CAAAA,CAAU,CAACE,EAAE,GAAYH,CAAY,GAAC,EACvD,CAAC,MAEG,CAAAC,CAAU,CAgBRL,CAAI,CAACQ,eAAe,CAACL,CAAW,CAAEE,CAAU,CAAC,CAf3C,GAAAI,UAAG,EACR,GAAI,CAAAC,8BAAc,CAChBC,kCAAkB,CAACC,+BAA+B,CAClDR,CAAY,CACZD,CAAW,CACZ,CACF,CAGH;AAEA;AACA;AACA;AAGF,CAAC,EAzCC,IAAI,CAACL,WAAW,CAAGA,CAAW,CAC9B,IAAI,CAACe,OAAO,CAAGd,CACjB,CAAC,OAAAe,YAAA,CAAAjB,CAAA,GAAAkB,GAAA,yBAAAC,KAAA,CAyCD,SAAAC,sBACEd,CAAmB,CAC+B,CAClD,GAAM,CAAAe,CAAM,CAAG,IAAI,CAACL,OAAO,CAACM,IAAI,EAAE,CAElC,GAAI,CAACD,CAAM,CAACE,EAAE,CACZ,MAAO,CAAAF,CAAM,CAGf,GAAM,CAAApB,CAAW,CAAGoB,CAAM,CAACG,IAAI,CAAClB,CAAW,CAAC,CAAC,MAExC,CAAAL,CAAW,CAMT,GAAAwB,SAAE,EAACxB,CAAW,CAAC,CALb,GAAAW,UAAG,EACR,GAAI,CAAAC,8BAAc,CAACC,kCAAkB,CAACY,WAAW,CAAEpB,CAAW,CAAC,CAKrE,CAAC,GAAAY,GAAA,2BAAAC,KAAA,CAED,SAAAQ,wBAAA3B,CAAA,CAUE,IATA,CAAAM,CAAW,CAAAN,CAAA,CAAXM,WAAW,CACXsB,CAAW,CAAA5B,CAAA,CAAX4B,WAAW,CACXC,CAAa,CAAA7B,CAAA,CAAb6B,aAAa,CACbC,CAAW,CAAA9B,CAAA,CAAX8B,WAAW,CACXC,CAAqB,CAAA/B,CAAA,CAArB+B,qBAAqB,CAAAC,CAAA,CAAAhC,CAAA,CACrBiC,cAAc,CAKRC,CAAc,CAAGC,oBAAS,CAACC,mBAAmB,CAAC9B,CAAW,CAAC,CAEjE,GAAI,CAAC4B,CAAc,CAACX,EAAE,CACpB,MAAO,GAAAX,UAAG,EAACsB,CAAc,CAACG,KAAK,CAAC,CACjC,IAAAC,CAAA,CAGCC,CAAK,CAIHX,CAAW,CAJbW,KAAK,CACLC,CAAU,CAGRZ,CAAW,CAHbY,UAAU,CACNC,CAAa,CAEfb,CAAW,CAFblB,EAAE,CACFgC,CAAmB,CACjBd,CAAW,CADbc,mBAAmB,CAAAC,CAAA,CAAAC,0BAAA,CAGFL,CAAK,MAAxB,IAAAI,CAAA,CAAAE,CAAA,KAAAP,CAAA,CAAAK,CAAA,CAAAA,CAAA,IAAAG,IAAA,EAA0B,IAAf,CAAAC,CAAI,CAAAT,CAAA,CAAAnB,KAAA,CAEX6B,CAAO,CAMLD,CAAI,CANNC,OAAO,CACPzC,CAAY,CAKVwC,CAAI,CALNxC,YAAY,CACZG,CAAE,CAIAqC,CAAI,CAJNrC,EAAE,CACFuC,CAAU,CAGRF,CAAI,CAHNE,UAAU,CACVC,CAAW,CAETH,CAAI,CAFNG,WAAW,CACXC,CAAqB,CACnBJ,CAAI,CADNI,qBAAqB,CAIjBC,CAAe,CAAGjB,oBAAS,CAACkB,cAAc,CAAC,CAC/CL,OAAO,CAAPA,CAAO,CACP1C,WAAW,CAAXA,CAAW,CACXC,YAAY,CAAZA,CAAY,CACZsB,aAAa,CAAbA,CAAa,CACbC,WAAW,CAAXA,CAAW,CACXC,qBAAqB,CAArBA,CAAqB,CACrBuB,sBAAsB,CAAE,IAC1B,CAAC,CAAC,CAEF,GAAI,CAACF,CAAe,CAAC7B,EAAE,CACrB,MAAO,CAAA6B,CAAe,CAGxB,GAAKA,CAAe,CAAC5B,IAAI,EAIzB;AACA;AACA;AACA,GAAM,CAAA+B,CAAQ,CAAGC,cAAM,CAACC,2BAA2B,CAAC,CAClDnD,WAAW,CAAXA,CAAW,CACX4C,WAAW,CAAXA,CAAW,CACXQ,UAAU,CAAShD,CAAE,GACvB,CAAC,CAAC,CAEF,GAAI6C,CAAQ,EAAIN,CAAU,CAAE,KAAAU,CAAA,CACtBC,CAAc,CAAG,CAAC,CAEhBC,CAAa,CAAGL,cAAM,CAACC,2BAA2B,CAAC,CACvDnD,WAAW,CAAXA,CAAW,CACX4C,WAAW,CAAXA,CAAW,CACXQ,UAAU,CAASnD,CAAY,GACjC,CAAC,CAAC,CAAAuD,CAAA,CAAAlB,0BAAA,CAEsBO,CAAqB,MAA7C,IAAAW,CAAA,CAAAjB,CAAA,KAAAc,CAAA,CAAAG,CAAA,CAAAnB,CAAA,IAAAG,IAAA,EAA+C,IAApC,CAAAiB,CAAS,CAAAJ,CAAA,CAAAxC,KAAA,CAGlB,GAFAyC,CAAc,EAAIG,CAAS,CAACd,UAAU,CAElCY,CAAa,EAAID,CAAc,CAAE,CAI/Bb,CAAI,CAACiB,IAAI,GAAKC,eAAQ,CAACC,eAAe,WAAAlC,CAAA,EAAAA,CAAkB,EAC1D,IAAI,CAACmC,iBAAiB,CAAC,CACrB7D,WAAW,CAAXA,CAAW,CACXC,YAAY,CAASA,CAAY,GAAC,CAClC;AACA;AACA6D,WAAW,CAAEL,CAAS,CAACK,WACzB,CAAC,CAAC,CAGJ,GAAQ,CAAAnB,CAAU,CAAwBc,CAAS,CAA3Cd,UAAU,CAAKoB,CAAc,CAAAC,wBAAA,CAAKP,CAAS,CAAAQ,SAAA,EAEnD,MAAO,GAAA9C,SAAE,EAAA+C,aAAA,CAAAA,aAAA,IACJH,CAAc,MACjBtB,IAAI,CAAJA,CAAI,CACJN,aAAa,CAAbA,CAAa,CACbD,UAAU,CAAVA,CAAU,CACVjC,YAAY,CAAZA,CAAY,GAEhB,CACF,CAAC,OAAAP,CAAA,EAAA8D,CAAA,CAAAW,CAAA,CAAAzE,CAAA,UAAA8D,CAAA,CAAAY,CAAA,GACH,CAEA,GAAI3B,CAAI,CAACiB,IAAI,GAAKC,eAAQ,CAACU,iBAAiB,CAC1C,KACD,CACH,CAAC,OAAA3E,CAAA,EAAA2C,CAAA,CAAA8B,CAAA,CAAAzE,CAAA,UAAA2C,CAAA,CAAA+B,CAAA,GAED,MAAO,GAAAjD,SAAE,EAAC,CACRe,UAAU,CAAVA,CAAU,CACVC,aAAa,CAAbA,CAAa,CACblC,YAAY,CAAE,IAAI,CAClBqE,YAAY,CAAElC,CAAmB,CACjC0B,WAAW,CAAE,IAAI,CACjBrB,IAAI,CAAE,IACR,CAAC,CACH,CAAC,GAAA7B,GAAA,0BAAAC,KAAA,CAED,SAAA0D,uBACEvE,CAAmB,CACnBE,CAA8B,CACE,KAAAsE,CAAA,CACxBpE,CAAE,CAA8BF,CAAU,CAA1CE,EAAE,CAAEwC,CAAW,CAAiB1C,CAAU,CAAtC0C,WAAW,CAAE6B,CAAU,CAAKvE,CAAU,CAAzBuE,UAAU,CAE7BC,CAAU,CAAGxB,cAAM,CAACyB,0BAA0B,CAAC,CACnD3E,WAAW,CAAXA,CAAW,CACXoD,UAAU,CAAEhD,CAAE,CACdwC,WAAW,CAAXA,CACF,CAAC,CAAC,CAEEgC,CAAa,GAAO,CACpBtB,CAAc,CAAG,CAAC,CAClBuB,CAAiB,CAAG,CAAC,CAAAC,CAAA,CAAAxC,0BAAA,CAEDmC,CAAU,MAAlC,IAAAK,CAAA,CAAAvC,CAAA,KAAAiC,CAAA,CAAAM,CAAA,CAAAzC,CAAA,IAAAG,IAAA,EAAoC,IAAzB,CAAAuC,CAAS,CAAAP,CAAA,CAAA3D,KAAA,CAGlB,GAFAyC,CAAc,EAAIyB,CAAS,CAAClE,KAAK,CAE7ByC,CAAc,EAAIoB,CAAU,CAAE,CAIhCE,CAAa,GAAQ,CAGS,QAAQ,GAAlCG,CAAS,CAACjB,WAAwB,GACpCe,CAAiB,EAAUE,CAAS,CAACjB,WAAY,EAGnD,KACF,CACF,CAAC,OAAApE,CAAA,EAAAoF,CAAA,CAAAX,CAAA,CAAAzE,CAAA,UAAAoF,CAAA,CAAAV,CAAA,SAEG,CAAAQ,CAAa,CACR,GAAAtE,UAAG,EACR,GAAI,CAAAC,8BAAc,CAACC,kCAAkB,CAACwE,YAAY,CAAEhF,CAAW,CAAC,CACjE,CAGI,GAAAmB,SAAE,EAAC0D,CAAiB,CAC7B,CAAC,GAAAjE,GAAA,mBAAAC,KAAA,CAED,SAAAR,gBACEL,CAAmB,CACnBE,CAA8B,CACE,CAChC,GAAM,CAAA+E,CAAe,CAAG,IAAI,CAACV,sBAAsB,CACjDvE,CAAW,CACXE,CAAU,CACX,CAED,GAAI,CAAC+E,CAAe,CAAChE,EAAE,CACrB,MAAO,CAAAgE,CAAe,CAGxB,GAAM,CAAAlE,CAAM,CAAG,IAAI,CAAC8C,iBAAiB,CAAC,CACpC7D,WAAW,CAAXA,CAAW,CACXC,YAAY,CAAEC,CAAU,CAACE,EAAE,CAC3B0D,WAAW,CAAEmB,CAAe,CAAC/D,IAC/B,CAAC,CAAC,CAAC,MAEE,CAAAH,CAAM,CAACE,EAAE,CAIP,GAAAE,SAAE,EAAC8D,CAAe,CAAC/D,IAAI,CAAC,CAHtBH,CAIX,CAAC,GAAAH,GAAA,qBAAAC,KAAA,CAED,SAAAgD,kBAAAnE,CAAA,CAI0D,IAHxD,CAAAM,CAAW,CAAAN,CAAA,CAAXM,WAAW,CACXC,CAAY,CAAAP,CAAA,CAAZO,YAAY,CACZ6D,CAAW,CAAApE,CAAA,CAAXoE,WAAW,CAEL/C,CAAM,CAAG,IAAI,CAACL,OAAO,CAACM,IAAI,EAAE,CAElC,GAAI,CAACD,CAAM,CAACE,EAAE,EAMRF,CAAM,CAACgB,KAAK,CAAC2B,IAAI,GAAKlD,kCAAkB,CAAC0E,YAAY,CALzD;AACA;AACA;AACA;AACA;AAEE,MAAO,CAAAnE,CAAM,CAEhB,GAEK,CAAAoE,CAAuC,CAAGpE,CAAM,CAACE,EAAE,CACrDF,CAAM,CAACG,IAAI,CACX,CAAC,CAAC,CAEAkE,CAAgB,CAAG,CACvBtB,WAAW,CAAXA,CAAW,CACXuB,cAAc,CAAE,GAAI,CAAAC,IAAI,EAAE,CAACC,QAAQ,EACrC,CAAC,CAUD,MARI,CAAAJ,CAAoB,CAACnF,CAAW,CAAC,CACnCmF,CAAoB,CAACnF,CAAW,CAAC,CAACC,CAAY,CAAC,CAAGmF,CAAgB,CAElED,CAAoB,CAACnF,CAAW,CAAC,CAAAD,eAAA,IAC9BE,CAAY,CAAGmF,CAAgB,CACjC,CAGI,IAAI,CAAC1E,OAAO,CAAC8E,KAAK,CAACL,CAAoB,CAChD,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA,IAAAzF,CAAA,IAAA+F,OAAA,CAAAhG,sBAAA,CAAAA,sBAAA"}