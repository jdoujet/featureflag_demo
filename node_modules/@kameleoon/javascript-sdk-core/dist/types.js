"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.VariableType=exports.Milliseconds=exports.Environment=void 0;/**
 * @param {number} updateInterval - update interval in _minutes_ for sdk configuration, minimum value is 1 minute
 * @defaultvalue 60
 *
 * @param {Environment} environment - feature flag environment
 * @defaultvalue Environment.Production
 *
 * @param {number | undefined} targetingDataCleanupInterval - interval in _minutes_ for cleaning up targeting data, minimum value is 1 minute
 * Note: if not specified, default value will be used
 * @defaultvalue
 * - JavaScript SDK: `undefined` (no cleanup)
 * - React/React Native SDK: `undefined` (no cleanup)
 * - NodeJS SDK: `30`
 * */ /**
 * @param {string} siteCode - client's siteCode defined on Kameleoon platform
 * @param {Partial<SDKConfigurationType>} configuration - client's configuration
 * @param {InternalSDKConfigurationType} internalConfiguration - internal configuration for sdk core to be initialized with certain parameters to certain type of JavaScript SDK
 * */ /**
 * @param {SdkLanguageType} type - type of the SDK
 * @param {string} version - version of the package
 * */ /**
 * @param {IExternalStorage | undefined} externalStorage - external file system storage implemented outside client initialization
 * @param {IExternalEventSourceConstructor | undefined} externalEventSource - constructor for building external event source implementation
 * @param {ExternalPackageInfoType} externalPackageInfo - external package info, used to get package version and name
 * @param {GetClientConfigurationResultType} externalClientConfiguration - external fetched client configuration
 * @param {IExternalRequestDispatcher} externalRequestDispatcher - external request dispatcher, used to track data or get data
 * @param {number} targetingDataCleanupInterval - interval in *minutes* for cleaning up targeting data, minimum value is 1 minute
 * */ /**
 * @readonly
 * @enum {string} an Enum containing all possible variants of environment, passed as an argument to KameleoonClient `configuration`s `environment` field
 * */var Environment=/*#__PURE__*/function(a){return a.Production="production",a.Staging="staging",a.Development="development",a}({});/**
 * @readonly
 * @enum {string} an Enum containing all possible variants of feature variable types
 * */exports.Environment=Environment;var VariableType=/*#__PURE__*/function(a){return a.BOOLEAN="BOOLEAN",a.NUMBER="NUMBER",a.STRING="STRING",a.JSON="JSON",a}({});exports.VariableType=VariableType;/**
 * @readonly
 * @enum {number} a helper Enum for getting milliseconds for a second, a minute and an hour.
 * */var Milliseconds=function(a){return a[a.Second=1000]="Second",a[a.Minute=60*a.Second]="Minute",a[a.Hour=60*a.Minute]="Hour",a}({});/**
 * @param {string} visitorCode - unique visitor identifier, shouldn't exceed 255 characters
 * @param {number} goalId - an id of a goal to track
 * @param {number | undefined} revenue - an optional parameter for revenue, default value is `0`
 * */exports.Milliseconds=Milliseconds;
//# sourceMappingURL=types.js.map