{"version":3,"file":"types.js","names":[],"sources":["../../src/eventSource/types.ts"],"sourcesContent":["/**\n * @interface an interface of External Constructor for External Event Source which must be implemented by the wrapper constructor to initialize new `IExternalEventSource` in order to pass the necessary `url` parameter\n * */\nexport interface IExternalEventSourceConstructor {\n  /**\n   * @method initialize - creates and instance of `IExternalEventSource` and returns it\n   * @param {string} url - url of server sent event server which will be pasted by consumer\n   * @returns {IExternalEventSource} an initialized instance of `IExternalEventSource`\n   * */\n  initialize: (url: string) => IExternalEventSource;\n}\n\n/**\n * @param {string} siteCode - site code from the event\n * @param {string} eventType - type of event to be listened for\n * @param {(timestamp: number) => void} onEvent  - callback to be executed upon event if the site code from event matches the site code of EvenetSource\n * */\nexport type EventSourceOpenParametersType = {\n  siteCode: string;\n  eventType: string;\n  onEvent: (timestamp: number) => void;\n};\n\n/**\n * @interface an interface of External Event Source which will be used in server sent events operations\n * */\nexport interface IExternalEventSource {\n  /**\n   * @method open - opens event source live connection\n   * @param {(timestamp: number) => void} callback - callback function that will be executed on each obtainment of server event\n   * */\n  open: ({\n    siteCode,\n    eventType,\n    onEvent,\n  }: EventSourceOpenParametersType) => void;\n  /**\n   * @method close - closes event source live connection\n   * */\n  close: () => void;\n}\n\n/**\n * @param {string} siteCode - site code from the event\n * @param {number} ts - timestamp of when the event has happened\n * */\nexport type RealTimeEventType = {\n  siteCode: string;\n  ts: number;\n};\n\nexport type CreateEventSourceParamsType = {\n  siteCode: string;\n  externalEventSource?: IExternalEventSourceConstructor;\n};\n"],"mappings":""}