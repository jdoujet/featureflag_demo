import { KameleoonStorageKey } from '../storage';
import { TargetingType } from '../targeting';
export declare const ERROR_MESSAGES: {
    JSONParse: (err: unknown) => string;
    NumberParse: (value: string) => string;
    VersionParse: (value: string) => string;
    SemanticVersionParse: (value: string) => string;
    Initialization: () => string;
    StorageInitialization: () => string;
    EventSourceInitialization: () => string;
    VariationNotFound: () => string;
    FeatureFlagConfigurationNotFound: (featureKey: string, visitorCode: string) => string;
    FeatureFlagVariableNotFound: (variableKey: string, visitorCode: string) => string;
    ExperimentConfigurationNotFound: (experimentId: number, visitorCode: string) => string;
    NotTargeted: (visitorCode: string) => string;
    NotAllocated: (visitorCode: string) => string;
    VisitorCodeMaxLength: () => string;
    VisitorCodeEmpty: () => string;
    StorageWrite: (err: unknown) => string;
    StorageRead: (key: KameleoonStorageKey) => string;
    StorageParse: (err: unknown, key: KameleoonStorageKey) => string;
    ClientConfiguration: () => string;
    TargetingCondition: (targetingType: TargetingType) => string;
    AmongValuesCheck: (err: unknown, value: string) => string;
    RemoteData: () => string;
    MaximumRetriesReached: () => string;
};
