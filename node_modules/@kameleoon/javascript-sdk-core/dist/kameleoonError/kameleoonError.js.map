{"version":3,"file":"kameleoonError.js","names":["KameleoonError","a","b","type","secondParam","thirdParam","f","_classCallCheck","c","call","concat","_defineProperty","_assertThisInitialized","name","errorType","KameleoonException","Initialization","ClientConfiguration","VisitorCodeMaxLength","VisitorCodeEmpty","StorageInitialization","VariationNotFound","EventSourceInitialization","RemoteData","MaximumRetriesReached","message","ERROR_MESSAGES","NotAllocated","NotTargeted","ExperimentConfigurationNotFound","FeatureFlagVariableNotFound","FeatureFlagConfigurationNotFound","StorageWrite","JSONParse","StorageRead","StorageParse","TargetingCondition","NumberParse","VersionParse","SemanticVersionParse","AmongValuesCheck","exhaustCheck","_inherits","_createSuper","_createClass","key","get","_wrapNativeSuper","Error","exports"],"sources":["../../src/kameleoonError/kameleoonError.ts"],"sourcesContent":["import { KameleoonStorageKey } from 'src/storage';\nimport { TargetingType } from 'src/targeting';\nimport { ERROR_MESSAGES } from './constants';\nimport { exhaustCheck } from './helpers';\nimport { KameleoonException } from './types';\n\n/**\n * @class\n * KameleoonError - extends standard `Error` by adding custom `type` property with the type of `KameleoonException`\n * */\nexport class KameleoonError extends Error {\n  private errorType: KameleoonException;\n\n  /**\n   * @param {KameleoonException} type - type of KameleoonError represented by `KameleoonException` enum\n   * */\n  constructor(\n    type:\n      | KameleoonException.Initialization\n      | KameleoonException.ClientConfiguration\n      | KameleoonException.VisitorCodeMaxLength\n      | KameleoonException.VisitorCodeEmpty\n      | KameleoonException.StorageInitialization\n      | KameleoonException.EventSourceInitialization\n      | KameleoonException.VariationNotFound\n      | KameleoonException.RemoteData\n      | KameleoonException.MaximumRetriesReached,\n  );\n  constructor(\n    type: KameleoonException.FeatureFlagConfigurationNotFound,\n    featureKey: string,\n    visitorCode: string,\n  );\n  constructor(\n    type: KameleoonException.FeatureFlagVariableNotFound,\n    variableKey: string,\n    visitorCode: string,\n  );\n  constructor(\n    type: KameleoonException.NotTargeted | KameleoonException.NotAllocated,\n    visitorCode: string,\n  );\n  constructor(\n    type: KameleoonException.ExperimentConfigurationNotFound,\n    experimentId: number,\n    visitorCode: string,\n  );\n  constructor(\n    type: KameleoonException.StorageWrite | KameleoonException.JSONParse,\n    err: unknown,\n  );\n  constructor(type: KameleoonException.StorageRead, storageKey: string);\n  constructor(\n    type: KameleoonException.StorageParse,\n    err: unknown,\n    key: KameleoonStorageKey,\n  );\n  constructor(\n    type: KameleoonException.TargetingCondition,\n    targetingType: TargetingType,\n  );\n  constructor(\n    type: KameleoonException.AmongValuesCheck,\n    err: unknown,\n    value: string,\n  );\n  constructor(\n    type:\n      | KameleoonException.NumberParse\n      | KameleoonException.VersionParse\n      | KameleoonException.SemanticVersionParse,\n    value: string,\n  );\n  constructor(\n    type: KameleoonException,\n    secondParam?:\n      | number\n      | string\n      | unknown\n      | KameleoonStorageKey\n      | TargetingType,\n    thirdParam?: string | KameleoonStorageKey,\n  ) {\n    super(`Error: ${type}`);\n\n    this.name = 'KameleoonError';\n    this.errorType = type;\n\n    switch (type) {\n      case KameleoonException.Initialization:\n      case KameleoonException.ClientConfiguration:\n      case KameleoonException.VisitorCodeMaxLength:\n      case KameleoonException.VisitorCodeEmpty:\n      case KameleoonException.StorageInitialization:\n      case KameleoonException.VariationNotFound:\n      case KameleoonException.EventSourceInitialization:\n      case KameleoonException.RemoteData:\n      case KameleoonException.MaximumRetriesReached:\n        this.message = ERROR_MESSAGES[type]();\n        break;\n      case KameleoonException.NotAllocated:\n      case KameleoonException.NotTargeted:\n        this.message = ERROR_MESSAGES[type](secondParam as string);\n        break;\n      case KameleoonException.ExperimentConfigurationNotFound:\n        this.message = ERROR_MESSAGES[type](\n          secondParam as number,\n          thirdParam as string,\n        );\n        break;\n      case KameleoonException.FeatureFlagVariableNotFound:\n      case KameleoonException.FeatureFlagConfigurationNotFound:\n        this.message = ERROR_MESSAGES[type](\n          secondParam as string,\n          thirdParam as string,\n        );\n        break;\n      case KameleoonException.StorageWrite:\n      case KameleoonException.JSONParse:\n        this.message = ERROR_MESSAGES[type](secondParam);\n        break;\n      case KameleoonException.StorageRead:\n        this.message = ERROR_MESSAGES[type](secondParam as KameleoonStorageKey);\n        break;\n      case KameleoonException.StorageParse:\n        this.message = ERROR_MESSAGES[type](\n          secondParam,\n          thirdParam as KameleoonStorageKey,\n        );\n        break;\n      case KameleoonException.TargetingCondition:\n        this.message = ERROR_MESSAGES[type](secondParam as TargetingType);\n        break;\n      case KameleoonException.NumberParse:\n      case KameleoonException.VersionParse:\n      case KameleoonException.SemanticVersionParse:\n        this.message = ERROR_MESSAGES[type](secondParam as string);\n        break;\n      case KameleoonException.AmongValuesCheck:\n        this.message = ERROR_MESSAGES[type](secondParam, thirdParam as string);\n        break;\n      default:\n        exhaustCheck(type);\n    }\n  }\n\n  get type(): KameleoonException {\n    return this.errorType;\n  }\n}\n"],"mappings":"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"}