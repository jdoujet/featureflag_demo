{"version":3,"file":"kameleoonUtils.js","names":["KameleoonUtils","a","_classCallCheck","_createClass","key","value","generateRandomString","length","randomString","i","Math","floor","random","getCookieVisitorCode","cookie","pairs","split","Cookie","PairsDelimiter","pair","find","b","KeyValueDelimiter","c","_slicedToArray","_","KAMELEOON_COOKIE_KEY","d","e","Ok","Err","getResultCookie","domain","visitorCode","cookieArray","MaxAge","Path","Domain","join","exports"],"sources":["../src/kameleoonUtils.ts"],"sourcesContent":["import { Err, Ok, Result } from 'ts-res';\nimport { Cookie, KAMELEOON_COOKIE_KEY } from './constants';\nimport {\n  GetResultCookieParametersType,\n  ClientGetVisitorCodeParametersType,\n  ServerGetVisitorCodeParametersType,\n  MobileGetVisitorCodeParametersType,\n} from './types';\n\n/**\n * @abstract\n * KameleoonUtils - an abstract class for extending kameleoon utils with pre-defined method signatures\n * */\nexport abstract class KameleoonUtils {\n  abstract getVisitorCode(\n    param:\n      | ClientGetVisitorCodeParametersType\n      | ServerGetVisitorCodeParametersType\n      | MobileGetVisitorCodeParametersType,\n  ): string;\n\n  protected generateRandomString(length: number): string {\n    const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\n    let randomString = '';\n\n    if (length < 0) {\n      return randomString;\n    }\n\n    for (let i = 0; i < length; i++) {\n      randomString += characters[Math.floor(Math.random() * characters.length)];\n    }\n\n    return randomString;\n  }\n\n  protected getCookieVisitorCode(cookie: string): Result<string, void> {\n    const pairs = cookie.split(Cookie.PairsDelimiter);\n    const pair = pairs.find((pair) => {\n      const [key, _] = pair.split(Cookie.KeyValueDelimiter) as [string, string];\n\n      return key === KAMELEOON_COOKIE_KEY;\n    });\n\n    if (pair) {\n      const [_, value] = pair.split(Cookie.KeyValueDelimiter);\n\n      return Ok(value);\n    }\n\n    return Err();\n  }\n\n  protected getResultCookie({\n    domain,\n    visitorCode,\n  }: GetResultCookieParametersType): string {\n    const yearSeconds = 60 * 60 * 24 * 365;\n    const cookieArray = [\n      KAMELEOON_COOKIE_KEY + Cookie.KeyValueDelimiter + visitorCode,\n      Cookie.MaxAge + Cookie.KeyValueDelimiter + yearSeconds,\n      Cookie.Path + Cookie.KeyValueDelimiter + '/',\n      Cookie.Domain + Cookie.KeyValueDelimiter + domain,\n    ];\n\n    return cookieArray.join(Cookie.PairsDelimiter);\n  }\n}\n"],"mappings":"69EASA;AACA;AACA;AACA,KAHA,GAIsB,CAAAA,cAAc,kCAAAC,EAAA,EAAAC,eAAA,MAAAD,CAAA,SAAAE,YAAA,CAAAF,CAAA,GAAAG,GAAA,wBAAAC,KAAA,CAQlC,SAAAC,qBAA+BC,CAAc,CAAU,IAEjD,CAAAC,CAAY,CAAG,EAAE,CAErB,GAAa,CAAC,CAAVD,CAAU,CACZ,MAAO,CAAAC,CAAY,CAGrB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,CAAM,CAAEE,CAAC,EAAE,CAC7BD,CAAY,EAAI,uCAAWE,IAAI,CAACC,KAAK,CAAC,GAAAD,IAAI,CAACE,MAAM,EAAsB,CAAC,CAAC,CAG3E,MAAO,CAAAJ,CACT,CAAC,GAAAJ,GAAA,wBAAAC,KAAA,CAED,SAAAQ,qBAA+BC,CAAc,CAAwB,IAC7D,CAAAC,CAAK,CAAGD,CAAM,CAACE,KAAK,CAACC,iBAAM,CAACC,cAAc,CAAC,CAC3CC,CAAI,CAAGJ,CAAK,CAACK,IAAI,CAAC,SAACD,CAAI,CAAK,CAChC,IAAAE,CAAA,CAAiBF,CAAI,CAACH,KAAK,CAACC,iBAAM,CAACK,iBAAiB,CAAC,CAAAC,CAAA,CAAAC,cAAA,CAAAH,CAAA,IAA9CjB,CAAG,CAAAmB,CAAA,IAAEE,CAAC,CAAAF,CAAA,IAEb,MAAO,CAAAnB,CAAG,GAAKsB,+BACjB,CAAC,CAAC,CAEF,GAAIP,CAAI,CAAE,CACR,IAAAQ,CAAA,CAAmBR,CAAI,CAACH,KAAK,CAACC,iBAAM,CAACK,iBAAiB,CAAC,CAAAM,CAAA,CAAAJ,cAAA,CAAAG,CAAA,IAAhDF,CAAC,CAAAG,CAAA,IAAEvB,CAAK,CAAAuB,CAAA,IAEf,MAAO,GAAAC,SAAE,EAACxB,CAAK,CACjB,CAEA,MAAO,GAAAyB,UAAG,GACZ,CAAC,GAAA1B,GAAA,mBAAAC,KAAA,CAED,SAAA0B,gBAAA9B,CAAA,CAG0C,IAFxC,CAAA+B,CAAM,CAAA/B,CAAA,CAAN+B,MAAM,CACNC,CAAW,CAAAhC,CAAA,CAAXgC,WAAW,CAGLC,CAAW,CAAG,CAClBR,+BAAoB,CAAGT,iBAAM,CAACK,iBAAiB,CAAGW,CAAW,CAC7DhB,iBAAM,CAACkB,MAAM,CAAGlB,iBAAM,CAACK,iBAAiB,SAAc,CACtDL,iBAAM,CAACmB,IAAI,CAAGnB,iBAAM,CAACK,iBAAiB,CAAG,GAAG,CAC5CL,iBAAM,CAACoB,MAAM,CAAGpB,iBAAM,CAACK,iBAAiB,CAAGU,CAAM,CAClD,CAED,MAAO,CAAAE,CAAW,CAACI,IAAI,CAACrB,iBAAM,CAACC,cAAc,CAC/C,CAAC,IAAAjB,CAAA,IAAAsC,OAAA,CAAAvC,cAAA,CAAAA,cAAA"}