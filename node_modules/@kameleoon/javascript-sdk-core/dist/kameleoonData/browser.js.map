{"version":3,"file":"browser.js","names":["Browser","a","browser","version","_classCallCheck","_defineProperty","nonce","Utilities","getNonce","_createClass","key","get","browserVersion","UrlParameter","BrowserVersion","UrlEventType","StaticData","BrowserIndex","BrowserIndexMap","Nonce","type","KameleoonData","exports"],"sources":["../../src/kameleoonData/browser.ts"],"sourcesContent":["import { UrlEventType, UrlParameter } from 'src/requester';\nimport { Utilities } from 'src/utilities';\nimport {\n  BrowserDataType,\n  BrowserType,\n  BrowserIndexMap,\n  IKameleoonData,\n  KameleoonData,\n} from './types';\n\n/**\n * @class\n * Browser - a class for creating an instance for browser of a certain type\n * */\nexport class Browser implements IKameleoonData {\n  private browser: BrowserType;\n  private nonce: string;\n  private version?: number;\n\n  /**\n   * @param {BrowserType} browser - one of the browser types available for data, if browser can not be found in a list, it can be marked as `BrowserType.Other`\n   * @param {number | undefined} version - version of the browser, floating point number represents major and minor version of the browser\n   * @example\n   * const browser = new Browser(BrowserType.Chrome, 86);\n   * const browser = new Browser(BrowserType.Safari, 14.1);\n   * */\n  constructor(browser: BrowserType, version?: number) {\n    this.browser = browser;\n    this.version = version;\n    this.nonce = Utilities.getNonce();\n  }\n\n  /**\n   * @property url - url for the current data type used for events tracking\n   * */\n  get url(): string {\n    // --- Note ---\n    // If SDK is used in vanilla JS codebase, then you're also able to create an instance\n    // with no required data, we don't want send anything to tracking in that case\n    if (!this.browser) {\n      return '';\n    }\n\n    const browserVersion = this.version\n      ? UrlParameter.BrowserVersion + this.version\n      : '';\n\n    return (\n      UrlEventType.StaticData +\n      UrlParameter.BrowserIndex +\n      BrowserIndexMap[this.browser] +\n      browserVersion +\n      UrlParameter.Nonce +\n      this.nonce\n    );\n  }\n\n  /**\n   * @property data - data of the current class instance\n   * */\n  get data(): BrowserDataType {\n    return {\n      browser: this.browser,\n      type: KameleoonData.Browser,\n      version: this.version,\n      nonce: this.nonce,\n    };\n  }\n}\n"],"mappings":"w6CAUA;AACA;AACA;AACA,KAHA,GAIa,CAAAA,OAAO,yBAKlB;AACF;AACA;AACA;AACA;AACA;AACA,OACE,SAAAC,EAAYC,CAAoB,CAAEC,CAAgB,CAAE,CAAAC,eAAA,MAAAH,CAAA,EAAAI,eAAA,wBAAAA,eAAA,sBAAAA,eAAA,wBAClD,IAAI,CAACH,OAAO,CAAGA,CAAO,CACtB,IAAI,CAACC,OAAO,CAAGA,CAAO,CACtB,IAAI,CAACG,KAAK,CAAGC,oBAAS,CAACC,QAAQ,EACjC,CAEA;AACF;AACA,OAFE,OAAAC,YAAA,CAAAR,CAAA,GAAAS,GAAA,OAAAC,GAAA,CAGA,SAAAA,IAAA,CAAkB,CAChB;AACA;AACA;AACA,GAAI,CAAC,IAAI,CAACT,OAAO,CACf,MAAO,EAAE,CAGX,GAAM,CAAAU,CAAc,CAAG,IAAI,CAACT,OAAO,CAC/BU,uBAAY,CAACC,cAAc,CAAG,IAAI,CAACX,OAAO,CAC1C,EAAE,CAEN,MACE,CAAAY,uBAAY,CAACC,UAAU,CACvBH,uBAAY,CAACI,YAAY,CACzBC,sBAAe,CAAC,IAAI,CAAChB,OAAO,CAAC,CAC7BU,CAAc,CACdC,uBAAY,CAACM,KAAK,CAClB,IAAI,CAACb,KAET,CAEA;AACF;AACA,OAFE,GAAAI,GAAA,QAAAC,GAAA,CAGA,SAAAA,IAAA,CAA4B,CAC1B,MAAO,CACLT,OAAO,CAAE,IAAI,CAACA,OAAO,CACrBkB,IAAI,CAAEC,oBAAa,CAACrB,OAAO,CAC3BG,OAAO,CAAE,IAAI,CAACA,OAAO,CACrBG,KAAK,CAAE,IAAI,CAACA,KACd,CACF,CAAC,IAAAL,CAAA,IAAAqB,OAAA,CAAAtB,OAAA,CAAAA,OAAA"}