"use strict";var _BrowserIndexMap;Object.defineProperty(exports,"__esModule",{value:!0}),exports.KameleoonData=exports.DeviceType=exports.BrowserType=exports.BrowserIndexMap=void 0;function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _defineProperty(a,b,c){return b=_toPropertyKey(b),b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _toPropertyKey(a){var b=_toPrimitive(a,"string");return"symbol"===_typeof(b)?b:b+""}function _toPrimitive(a,b){if("object"!==_typeof(a)||null===a)return a;var c=a[Symbol.toPrimitive];if(c!==void 0){var d=c.call(a,b||"default");if("object"!==_typeof(d))return d;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}/**
 * @interface an interface of KameleoonData
 * each class instance will have url getter method
 * for handling url of different data types
 * */ /**
 * @type a tuple of each possible type of data for `addData` method
 * of KameleoonClient
 * */var KameleoonData=/*#__PURE__*/function(a){return a.CustomData="customData",a.PageView="pageView",a.Browser="browser",a.Conversion="conversion",a.Device="device",a.UserAgent="userAgent",a}({});exports.KameleoonData=KameleoonData;/**
 * @readonly
 * @enum {string} an Enum containing all possible variants for device type
 * */var DeviceType=/*#__PURE__*/function(a){return a.Phone="PHONE",a.Tablet="TABLET",a.Desktop="DESKTOP",a}({});/**
 * @readonly
 * @enum {string} an Enum containing all possible variants for browser type
 * */exports.DeviceType=DeviceType;var BrowserType=/*#__PURE__*/function(a){return a.Chrome="CHROME",a.InternetExplorer="IE",a.Firefox="FIREFOX",a.Safari="SAFARI",a.Opera="OPERA",a.Other="OTHER",a}({});exports.BrowserType=BrowserType;var BrowserIndexMap=(_BrowserIndexMap={},_defineProperty(_BrowserIndexMap,BrowserType.Chrome,0),_defineProperty(_BrowserIndexMap,BrowserType.InternetExplorer,1),_defineProperty(_BrowserIndexMap,BrowserType.Firefox,2),_defineProperty(_BrowserIndexMap,BrowserType.Safari,3),_defineProperty(_BrowserIndexMap,BrowserType.Opera,4),_defineProperty(_BrowserIndexMap,BrowserType.Other,5),_BrowserIndexMap);exports.BrowserIndexMap=BrowserIndexMap;
//# sourceMappingURL=types.js.map