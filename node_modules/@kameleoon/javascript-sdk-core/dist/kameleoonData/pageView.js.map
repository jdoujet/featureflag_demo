{"version":3,"file":"pageView.js","names":["PageView","a","b","urlAddress","title","referrers","_classCallCheck","_defineProperty","nonce","Utilities","getNonce","_createClass","key","get","titleParameter","UrlParameter","Title","encodeURIComponent","referrersParameter","length","ReferrersIndices","JSON","stringify","UrlEventType","Page","Href","Nonce","type","KameleoonData","exports"],"sources":["../../src/kameleoonData/pageView.ts"],"sourcesContent":["import { UrlEventType, UrlParameter } from 'src/requester';\nimport { Utilities } from 'src/utilities';\nimport {\n  IKameleoonData,\n  KameleoonData,\n  PageViewDataType,\n  PageViewParametersType,\n} from './types';\n\n/**\n * @class\n * PageView - a class for creating an instance of a page view data\n * */\nexport class PageView implements IKameleoonData {\n  private urlAddress: string;\n  private title: string;\n  private nonce: string;\n  private referrers?: number[];\n\n  /**\n   * @param {PageViewParametersType} pageViewParameters - an object with page view parameters\n   * */\n  constructor({ urlAddress, title, referrers }: PageViewParametersType) {\n    this.urlAddress = urlAddress;\n    this.title = title;\n    this.referrers = referrers;\n    this.nonce = Utilities.getNonce();\n  }\n\n  /**\n   * @property url - url for the current data type used for events tracking\n   * */\n  get url(): string {\n    // --- Note ---\n    // If SDK is used in vanilla JS codebase, then you're also able to create an instance\n    // with no required data, we don't want send anything to tracking in that case\n    if (!this.urlAddress) {\n      return '';\n    }\n\n    const titleParameter = this.title\n      ? UrlParameter.Title + encodeURIComponent(this.title)\n      : '';\n\n    const referrersParameter = this.referrers?.length\n      ? UrlParameter.ReferrersIndices + JSON.stringify(this.referrers)\n      : '';\n\n    return (\n      UrlEventType.Page +\n      UrlParameter.Href +\n      encodeURIComponent(this.urlAddress) +\n      titleParameter +\n      referrersParameter +\n      UrlParameter.Nonce +\n      this.nonce\n    );\n  }\n\n  /**\n   * @property data - data of the current class instance\n   * */\n  get data(): PageViewDataType {\n    return {\n      urlAddress: this.urlAddress,\n      title: this.title,\n      referrers: this.referrers,\n      type: KameleoonData.PageView,\n      nonce: this.nonce,\n    };\n  }\n}\n"],"mappings":"y6CASA;AACA;AACA;AACA,KAHA,GAIa,CAAAA,QAAQ,yBAMnB;AACF;AACA,OACE,SAAAC,EAAAC,CAAA,CAAsE,IAAxD,CAAAC,CAAU,CAAAD,CAAA,CAAVC,UAAU,CAAEC,CAAK,CAAAF,CAAA,CAALE,KAAK,CAAEC,CAAS,CAAAH,CAAA,CAATG,SAAS,CAAAC,eAAA,MAAAL,CAAA,EAAAM,eAAA,2BAAAA,eAAA,sBAAAA,eAAA,sBAAAA,eAAA,0BACxC,IAAI,CAACJ,UAAU,CAAGA,CAAU,CAC5B,IAAI,CAACC,KAAK,CAAGA,CAAK,CAClB,IAAI,CAACC,SAAS,CAAGA,CAAS,CAC1B,IAAI,CAACG,KAAK,CAAGC,oBAAS,CAACC,QAAQ,EACjC,CAEA;AACF;AACA,OAFE,OAAAC,YAAA,CAAAV,CAAA,GAAAW,GAAA,OAAAC,GAAA,CAGA,SAAAA,IAAA,CAAkB,KAAAZ,CAAA,CAChB;AACA;AACA;AACA,GAAI,CAAC,IAAI,CAACE,UAAU,CAClB,MAAO,EAAE,CACV,GAEK,CAAAW,CAAc,CAAG,IAAI,CAACV,KAAK,CAC7BW,uBAAY,CAACC,KAAK,CAAGC,kBAAkB,CAAC,IAAI,CAACb,KAAK,CAAC,CACnD,EAAE,CAEAc,CAAkB,CAAG,QAAAjB,CAAA,KAAI,CAACI,SAAS,YAAAJ,CAAA,EAAdA,CAAA,CAAgBkB,MAAM,CAC7CJ,uBAAY,CAACK,gBAAgB,CAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACjB,SAAS,CAAC,CAC9D,EAAE,CAEN,MACE,CAAAkB,uBAAY,CAACC,IAAI,CACjBT,uBAAY,CAACU,IAAI,CACjBR,kBAAkB,CAAC,IAAI,CAACd,UAAU,CAAC,CACnCW,CAAc,CACdI,CAAkB,CAClBH,uBAAY,CAACW,KAAK,CAClB,IAAI,CAAClB,KAET,CAEA;AACF;AACA,OAFE,GAAAI,GAAA,QAAAC,GAAA,CAGA,SAAAA,IAAA,CAA6B,CAC3B,MAAO,CACLV,UAAU,CAAE,IAAI,CAACA,UAAU,CAC3BC,KAAK,CAAE,IAAI,CAACA,KAAK,CACjBC,SAAS,CAAE,IAAI,CAACA,SAAS,CACzBsB,IAAI,CAAEC,oBAAa,CAAC5B,QAAQ,CAC5BQ,KAAK,CAAE,IAAI,CAACA,KACd,CACF,CAAC,IAAAP,CAAA,IAAA4B,OAAA,CAAA7B,QAAA,CAAAA,QAAA"}