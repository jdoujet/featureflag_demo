{"version":3,"file":"types.js","names":["KameleoonData","CustomData","PageView","Browser","Conversion","Device","UserAgent","exports","DeviceType","Phone","Tablet","Desktop","BrowserType","Chrome","InternetExplorer","Firefox","Safari","Opera","Other","BrowserIndexMap","_BrowserIndexMap","_defineProperty"],"sources":["../../src/kameleoonData/types.ts"],"sourcesContent":["import {\n  Browser,\n  Conversion,\n  CustomData,\n  Device,\n  PageView,\n  UserAgent,\n} from './';\n\nexport type KameleoonDataItemType =\n  | BrowserDataType\n  | ConversionDataType\n  | CustomDataType\n  | DeviceDataType\n  | PageViewDataType\n  | UserAgentDataType;\n\n/**\n * @interface an interface of KameleoonData\n * each class instance will have url getter method\n * for handling url of different data types\n * */\nexport interface IKameleoonData {\n  readonly url: string;\n  readonly data: KameleoonDataItemType;\n}\n\n/**\n * @type a tuple of each possible type of data for `addData` method\n * of KameleoonClient\n * */\nexport type KameleoonDataType =\n  | Browser\n  | Conversion\n  | CustomData\n  | Device\n  | PageView\n  | UserAgent;\n\nexport type ActivityTimePropertyType = {\n  lastActivityTime: number;\n};\n\nexport type ExistingCustomDataType = NonNullable<\n  KameleoonVisitorDataType[KameleoonData.CustomData]\n>;\n\nexport type ExistingDataType<T extends KameleoonData> = NonNullable<\n  KameleoonVisitorDataType[T]\n>;\n\nexport type KameleoonVisitorDataType<T = ActivityTimePropertyType> = {\n  [KameleoonData.CustomData]?: {\n    [index: number]: (CustomDataType & T) | undefined;\n  };\n  [KameleoonData.Conversion]?: ConversionDataType & T;\n  [KameleoonData.UserAgent]?: UserAgentDataType & T;\n  [KameleoonData.PageView]?: PageViewDataType & T;\n  [KameleoonData.Browser]?: BrowserDataType & T;\n  [KameleoonData.Device]?: DeviceDataType & T;\n};\n\nexport enum KameleoonData {\n  CustomData = 'customData',\n  PageView = 'pageView',\n  Browser = 'browser',\n  Conversion = 'conversion',\n  Device = 'device',\n  UserAgent = 'userAgent',\n}\n\ntype SharedDataPropertiesType = {\n  type: KameleoonData;\n  nonce: string;\n};\n\nexport type BrowserDataType = {\n  browser: BrowserType;\n  version?: number;\n} & SharedDataPropertiesType;\n\nexport type ConversionDataType = {\n  goalId: number;\n  revenue: number;\n  negative: boolean;\n} & SharedDataPropertiesType;\n\nexport type CustomDataType = {\n  index: number;\n  value: string | string[];\n} & SharedDataPropertiesType;\n\nexport type DeviceDataType = {\n  device: DeviceType;\n} & SharedDataPropertiesType;\n\nexport type PageViewDataType = {\n  urlAddress: string;\n  title: string;\n  referrers?: number[];\n} & SharedDataPropertiesType;\n\nexport type UserAgentDataType = {\n  value: string;\n} & SharedDataPropertiesType;\n\n/**\n * @param {number} goalId - an id of a goal to track\n * @param {number | undefined} revenue - an optional parameter for revenue, default value is `0`\n * @param {boolean | undefined} negative - an optional parameter identifying whether the conversion should be removed, default value is `false`\n * */\nexport type ConversionParametersType = {\n  goalId: number;\n  revenue?: number;\n  negative?: boolean;\n};\n\n/**\n * @param {string} urlAddress - url address of the page to track\n * @param {string} title - title of the web page\n * @param {number[] | undefined} referrers - an optional parameter containing a list of referrersIndices, has no default value\n * */\nexport type PageViewParametersType = {\n  urlAddress: string;\n  title: string;\n  referrers?: number[];\n};\n\n/**\n * @readonly\n * @enum {string} an Enum containing all possible variants for device type\n * */\nexport enum DeviceType {\n  Phone = 'PHONE',\n  Tablet = 'TABLET',\n  Desktop = 'DESKTOP',\n}\n\n/**\n * @readonly\n * @enum {string} an Enum containing all possible variants for browser type\n * */\nexport enum BrowserType {\n  Chrome = 'CHROME',\n  InternetExplorer = 'IE',\n  Firefox = 'FIREFOX',\n  Safari = 'SAFARI',\n  Opera = 'OPERA',\n  Other = 'OTHER',\n}\n\nexport const BrowserIndexMap = {\n  [BrowserType.Chrome]: 0,\n  [BrowserType.InternetExplorer]: 1,\n  [BrowserType.Firefox]: 2,\n  [BrowserType.Safari]: 3,\n  [BrowserType.Opera]: 4,\n  [BrowserType.Other]: 5,\n} as const;\n"],"mappings":"y9BAiBA;AACA;AACA;AACA;AACA,KAJA,CAUA;AACA;AACA;AACA,KAHA,GAmCY,CAAAA,aAAa,uBAAbA,CAAa,QAAb,CAAAA,CAAa,CAAAC,UAAA,cAAbD,CAAa,CAAAE,QAAA,YAAbF,CAAa,CAAAG,OAAA,WAAbH,CAAa,CAAAI,UAAA,cAAbJ,CAAa,CAAAK,MAAA,UAAbL,CAAa,CAAAM,SAAA,aAAbN,CAAa,MAAAO,OAAA,CAAAP,aAAA,CAAAA,aAAA,CAkEzB;AACA;AACA;AACA,KAHA,GAIY,CAAAQ,UAAU,uBAAVA,CAAU,QAAV,CAAAA,CAAU,CAAAC,KAAA,SAAVD,CAAU,CAAAE,MAAA,UAAVF,CAAU,CAAAG,OAAA,WAAVH,CAAU,MAMtB;AACA;AACA;AACA,KAHAD,OAAA,CAAAC,UAAA,CAAAA,UAAA,IAIY,CAAAI,WAAW,uBAAXA,CAAW,QAAX,CAAAA,CAAW,CAAAC,MAAA,UAAXD,CAAW,CAAAE,gBAAA,MAAXF,CAAW,CAAAG,OAAA,WAAXH,CAAW,CAAAI,MAAA,UAAXJ,CAAW,CAAAK,KAAA,SAAXL,CAAW,CAAAM,KAAA,SAAXN,CAAW,MAAAL,OAAA,CAAAK,WAAA,CAAAA,WAAA,CAShB,GAAM,CAAAO,eAAe,EAAAC,gBAAA,IAAAC,eAAA,CAAAD,gBAAA,CACzBR,WAAW,CAACC,MAAM,CAAG,CAAC,EAAAQ,eAAA,CAAAD,gBAAA,CACtBR,WAAW,CAACE,gBAAgB,CAAG,CAAC,EAAAO,eAAA,CAAAD,gBAAA,CAChCR,WAAW,CAACG,OAAO,CAAG,CAAC,EAAAM,eAAA,CAAAD,gBAAA,CACvBR,WAAW,CAACI,MAAM,CAAG,CAAC,EAAAK,eAAA,CAAAD,gBAAA,CACtBR,WAAW,CAACK,KAAK,CAAG,CAAC,EAAAI,eAAA,CAAAD,gBAAA,CACrBR,WAAW,CAACM,KAAK,CAAG,CAAC,EAAAE,gBAAA,CACd,CAACb,OAAA,CAAAY,eAAA,CAAAA,eAAA"}